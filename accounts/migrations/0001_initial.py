# Generated by Django 5.2.4 on 2025-08-03 17:23

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('line_user_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='LINE user ID')),
                ('line_display_name', models.CharField(blank=True, max_length=255, verbose_name='LINE display name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_approved', models.BooleanField(default=False, verbose_name='approved')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='pending', max_length=20, verbose_name='approval status')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=20, verbose_name='user type')),
                ('mfa_enabled', models.BooleanField(default=False, verbose_name='MFA enabled')),
                ('mfa_secret', models.CharField(blank=True, max_length=255, verbose_name='MFA secret')),
                ('mfa_backup_codes', models.JSONField(blank=True, default=list, verbose_name='MFA backup codes')),
                ('mfa_enforced_at', models.DateTimeField(blank=True, null=True, verbose_name='MFA enforced at')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='last activity')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='approved at')),
                ('last_password_change', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last password change')),
                ('password_history', models.JSONField(blank=True, default=list, verbose_name='password history')),
                ('failed_login_attempts', models.IntegerField(default=0, verbose_name='failed login attempts')),
                ('last_failed_login', models.DateTimeField(blank=True, null=True, verbose_name='last failed login')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last login IP')),
                ('registration_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='registration IP')),
                ('active_sessions', models.JSONField(blank=True, default=list, verbose_name='active sessions')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='accounts_cu_email_5ce40b_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['line_user_id'], name='accounts_cu_line_us_42c89f_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['approval_status'], name='accounts_cu_approva_74d667_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['last_activity'], name='accounts_cu_last_ac_6ec725_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordhistory',
            index=models.Index(fields=['user', '-created_at'], name='accounts_pa_user_id_0f22a1_idx'),
        ),
    ]
