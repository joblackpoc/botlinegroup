# Generated by Django 5.2.4 on 2025-08-03 17:23

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('THREAT_ANALYSIS', 'Threat Analysis'), ('INCIDENT_REPORT', 'Incident Report'), ('AUDIT_LOG', 'Audit Log')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='security_reports/')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SecurityConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='configuration name')),
                ('max_login_attempts', models.IntegerField(default=5, verbose_name='max login attempts')),
                ('lockout_duration_minutes', models.IntegerField(default=30, verbose_name='lockout duration (minutes)')),
                ('session_timeout_minutes', models.IntegerField(default=30, verbose_name='session timeout (minutes)')),
                ('min_password_length', models.IntegerField(default=12, verbose_name='min password length')),
                ('require_uppercase', models.BooleanField(default=True, verbose_name='require uppercase')),
                ('require_lowercase', models.BooleanField(default=True, verbose_name='require lowercase')),
                ('require_numbers', models.BooleanField(default=True, verbose_name='require numbers')),
                ('require_special_chars', models.BooleanField(default=True, verbose_name='require special characters')),
                ('password_expiry_days', models.IntegerField(default=90, verbose_name='password expiry days')),
                ('password_history_count', models.IntegerField(default=12, verbose_name='password history count')),
                ('mfa_required', models.BooleanField(default=True, verbose_name='MFA required')),
                ('mfa_grace_period_days', models.IntegerField(default=7, verbose_name='MFA grace period (days)')),
                ('rate_limit_enabled', models.BooleanField(default=True, verbose_name='rate limiting enabled')),
                ('rate_limit_requests', models.IntegerField(default=100, verbose_name='rate limit requests')),
                ('rate_limit_period_seconds', models.IntegerField(default=3600, verbose_name='rate limit period (seconds)')),
                ('ip_whitelist_enabled', models.BooleanField(default=False, verbose_name='IP whitelist enabled')),
                ('ip_whitelist', django.contrib.postgres.fields.ArrayField(base_field=models.GenericIPAddressField(), blank=True, default=list, help_text='List of whitelisted IP addresses', size=None)),
                ('audit_retention_days', models.IntegerField(default=90, verbose_name='audit retention days')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security configuration',
                'verbose_name_plural': 'security configurations',
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('threat_type', models.CharField(choices=[('ip', 'IP Address'), ('domain', 'Domain'), ('email', 'Email'), ('hash', 'File Hash'), ('pattern', 'Pattern')], max_length=20, verbose_name='threat type')),
                ('threat_value', models.CharField(max_length=255, verbose_name='threat value')),
                ('threat_level', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=20, verbose_name='threat level')),
                ('description', models.TextField(verbose_name='description')),
                ('source', models.CharField(max_length=100, verbose_name='source')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('first_seen', models.DateTimeField(auto_now_add=True, verbose_name='first seen')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='last seen')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('confidence', models.IntegerField(default=100, verbose_name='confidence')),
                ('hit_count', models.IntegerField(default=0, verbose_name='hit count')),
                ('false_positive_count', models.IntegerField(default=0, verbose_name='false positive count')),
            ],
            options={
                'verbose_name': 'threat intelligence',
                'verbose_name_plural': 'threat intelligence entries',
                'ordering': ['-last_seen'],
                'indexes': [models.Index(fields=['threat_type', 'threat_value'], name='security_su_threat__d7e961_idx'), models.Index(fields=['is_active', '-last_seen'], name='security_su_is_acti_e389ac_idx')],
                'unique_together': {('threat_type', 'threat_value')},
            },
        ),
        migrations.CreateModel(
            name='IPBlacklist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='IP address')),
                ('reason', models.CharField(choices=[('brute_force', 'Brute Force Attack'), ('suspicious_activity', 'Suspicious Activity'), ('malicious_requests', 'Malicious Requests'), ('rate_limit', 'Rate Limit Violations'), ('manual', 'Manual Block')], max_length=50, verbose_name='reason')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('blocked_at', models.DateTimeField(auto_now_add=True, verbose_name='blocked at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('unblocked_at', models.DateTimeField(blank=True, null=True, verbose_name='unblocked at')),
                ('block_count', models.IntegerField(default=1, verbose_name='block count')),
                ('last_attempt', models.DateTimeField(blank=True, null=True, verbose_name='last attempt')),
                ('blocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_ips', to=settings.AUTH_USER_MODEL)),
                ('unblocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unblocked_ips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IP blacklist',
                'verbose_name_plural': 'IP blacklist entries',
                'ordering': ['-blocked_at'],
                'indexes': [models.Index(fields=['ip_address', 'is_active'], name='security_su_ip_addr_226e18_idx'), models.Index(fields=['expires_at'], name='security_su_expires_f91b3f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('failed_login', 'Failed Login Attempts'), ('unauthorized_access', 'Unauthorized Access'), ('suspicious_activity', 'Suspicious Activity'), ('brute_force', 'Brute Force Attack'), ('password_spray', 'Password Spray Attack'), ('session_hijack', 'Session Hijacking Attempt'), ('privilege_escalation', 'Privilege Escalation'), ('data_exfiltration', 'Data Exfiltration Attempt'), ('malicious_command', 'Malicious Command Execution'), ('rate_limit', 'Rate Limit Exceeded'), ('ip_blocked', 'IP Address Blocked'), ('mfa_bypass', 'MFA Bypass Attempt'), ('account_lockout', 'Account Lockout'), ('expired_password', 'Expired Password Usage'), ('weak_password', 'Weak Password Detected')], max_length=50, verbose_name='alert type')),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('info', 'Info')], max_length=20, verbose_name='severity')),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='new', max_length=20, verbose_name='status')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('details', models.JSONField(default=dict, verbose_name='details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True, verbose_name='acknowledged at')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='resolved at')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='resolution notes')),
                ('auto_resolved', models.BooleanField(default=False, verbose_name='auto resolved')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='notification sent')),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'security alert',
                'verbose_name_plural': 'security alerts',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='security_su_status_811296_idx'), models.Index(fields=['severity', '-created_at'], name='security_su_severit_561275_idx'), models.Index(fields=['alert_type', '-created_at'], name='security_su_alert_t_e24a77_idx'), models.Index(fields=['user', '-created_at'], name='security_su_user_id_9f43a6_idx')],
            },
        ),
        migrations.CreateModel(
            name='SessionMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=255, unique=True, verbose_name='session key')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('user_agent', models.TextField(verbose_name='user agent')),
                ('device_info', models.JSONField(blank=True, default=dict, verbose_name='device info')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='last activity')),
                ('expires_at', models.DateTimeField(verbose_name='expires at')),
                ('is_suspicious', models.BooleanField(default=False, verbose_name='suspicious')),
                ('terminated', models.BooleanField(default=False, verbose_name='terminated')),
                ('terminated_at', models.DateTimeField(blank=True, null=True, verbose_name='terminated at')),
                ('termination_reason', models.TextField(blank=True, verbose_name='termination reason')),
                ('terminated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='terminated_sessions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitored_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'session monitor',
                'verbose_name_plural': 'session monitors',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', '-last_activity'], name='security_su_user_id_a7e2b0_idx'), models.Index(fields=['session_key'], name='security_su_session_56af98_idx'), models.Index(fields=['expires_at'], name='security_su_expires_9fc4c5_idx')],
            },
        ),
    ]
