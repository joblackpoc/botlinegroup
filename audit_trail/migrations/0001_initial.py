# Generated by Django 5.2.4 on 2025-08-03 17:23

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('response_time', 'Response Time'), ('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('database_queries', 'Database Queries'), ('cache_hit_rate', 'Cache Hit Rate'), ('error_rate', 'Error Rate'), ('active_users', 'Active Users'), ('api_calls', 'API Calls')], max_length=50, verbose_name='metric type')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='timestamp')),
                ('value', models.FloatField(verbose_name='value')),
                ('unit', models.CharField(max_length=20, verbose_name='unit')),
                ('endpoint', models.CharField(blank=True, max_length=255, verbose_name='endpoint')),
                ('user_count', models.IntegerField(default=0, verbose_name='user count')),
                ('warning_threshold', models.FloatField(blank=True, null=True, verbose_name='warning threshold')),
                ('critical_threshold', models.FloatField(blank=True, null=True, verbose_name='critical threshold')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='metadata')),
            ],
            options={
                'verbose_name': 'performance metric',
                'verbose_name_plural': 'performance metrics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', '-timestamp'], name='audit_trail_metric__5f8e4b_idx'), models.Index(fields=['endpoint', '-timestamp'], name='audit_trail_endpoin_64a56c_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('login_failed', 'Failed Login'), ('password_changed', 'Password Changed'), ('password_reset', 'Password Reset'), ('mfa_enabled', 'MFA Enabled'), ('mfa_disabled', 'MFA Disabled'), ('mfa_verified', 'MFA Verified'), ('mfa_failed', 'MFA Failed'), ('user_created', 'User Created'), ('user_updated', 'User Updated'), ('user_deleted', 'User Deleted'), ('user_approved', 'User Approved'), ('user_rejected', 'User Rejected'), ('user_suspended', 'User Suspended'), ('user_activated', 'User Activated'), ('group_created', 'Group Created'), ('group_updated', 'Group Updated'), ('group_deleted', 'Group Deleted'), ('group_password_changed', 'Group Password Changed'), ('group_member_added', 'Group Member Added'), ('group_member_removed', 'Group Member Removed'), ('command_executed', 'Command Executed'), ('command_failed', 'Command Failed'), ('message_received', 'Message Received'), ('message_sent', 'Message Sent'), ('security_alert', 'Security Alert'), ('ip_blocked', 'IP Blocked'), ('ip_unblocked', 'IP Unblocked'), ('session_terminated', 'Session Terminated'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('unauthorized_access', 'Unauthorized Access'), ('config_changed', 'Configuration Changed'), ('permission_granted', 'Permission Granted'), ('permission_revoked', 'Permission Revoked'), ('data_exported', 'Data Exported'), ('data_imported', 'Data Imported'), ('data_viewed', 'Data Viewed'), ('data_modified', 'Data Modified'), ('data_deleted', 'Data Deleted')], max_length=50, verbose_name='action')),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=20, verbose_name='severity')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('session_key', models.CharField(blank=True, max_length=255, verbose_name='session key')),
                ('object_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='object ID')),
                ('object_repr', models.CharField(blank=True, max_length=255, verbose_name='object representation')),
                ('message', models.TextField(verbose_name='message')),
                ('encrypted_details', models.TextField(blank=True, verbose_name='encrypted details')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='metadata')),
                ('search_vector', models.TextField(blank=True, verbose_name='search vector')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'audit log',
                'verbose_name_plural': 'audit logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['action', '-timestamp'], name='audit_trail_action_1aa001_idx'), models.Index(fields=['user', '-timestamp'], name='audit_trail_user_id_28aad9_idx'), models.Index(fields=['severity', '-timestamp'], name='audit_trail_severit_cce18a_idx'), models.Index(fields=['content_type', 'object_id'], name='audit_trail_content_d72e29_idx'), models.Index(fields=['ip_address', '-timestamp'], name='audit_trail_ip_addr_3ab876_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('compliance_type', models.CharField(choices=[('gdpr_request', 'GDPR Request'), ('data_retention', 'Data Retention'), ('audit_review', 'Audit Review'), ('policy_update', 'Policy Update'), ('security_assessment', 'Security Assessment'), ('incident_response', 'Incident Response'), ('user_consent', 'User Consent'), ('data_deletion', 'Data Deletion')], max_length=50, verbose_name='compliance type')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('description', models.TextField(verbose_name='description')),
                ('requestor', models.CharField(max_length=255, verbose_name='requestor')),
                ('status', models.CharField(default='pending', max_length=50, verbose_name='status')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('evidence', models.JSONField(blank=True, default=dict, verbose_name='evidence')),
                ('attachments', models.JSONField(blank=True, default=list, verbose_name='attachments')),
                ('outcome', models.TextField(blank=True, verbose_name='outcome')),
                ('recommendations', models.TextField(blank=True, verbose_name='recommendations')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'compliance log',
                'verbose_name_plural': 'compliance logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['compliance_type', '-timestamp'], name='audit_trail_complia_b35d0b_idx'), models.Index(fields=['status', '-timestamp'], name='audit_trail_status_874442_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('view', 'View'), ('export', 'Export'), ('download', 'Download'), ('print', 'Print'), ('share', 'Share')], max_length=20, verbose_name='access type')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('data_type', models.CharField(max_length=100, verbose_name='data type')),
                ('data_identifier', models.CharField(max_length=255, verbose_name='data identifier')),
                ('data_classification', models.CharField(default='internal', max_length=50, verbose_name='data classification')),
                ('purpose', models.TextField(blank=True, verbose_name='purpose')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('success', models.BooleanField(default=True, verbose_name='success')),
                ('records_accessed', models.IntegerField(default=0, verbose_name='records accessed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'data access log',
                'verbose_name_plural': 'data access logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='audit_trail_user_id_2974a7_idx'), models.Index(fields=['data_type', '-timestamp'], name='audit_trail_data_ty_172147_idx'), models.Index(fields=['access_type', '-timestamp'], name='audit_trail_access__ba698c_idx')],
            },
        ),
    ]
