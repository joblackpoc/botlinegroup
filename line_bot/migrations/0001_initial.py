# Generated by Django 5.2.4 on 2025-08-03 17:23

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('command', models.CharField(max_length=50, unique=True, verbose_name='command')),
                ('description', models.TextField(verbose_name='description')),
                ('permission_level', models.CharField(choices=[('superuser', 'Superuser Only'), ('admin', 'Admin Only'), ('user', 'All Users')], default='admin', max_length=20, verbose_name='permission level')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('usage_count', models.IntegerField(default=0, verbose_name='usage count')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='last used at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('last_used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_used_commands', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'bot command',
                'verbose_name_plural': 'bot commands',
                'ordering': ['command'],
            },
        ),
        migrations.CreateModel(
            name='LineGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group_id', models.CharField(max_length=255, unique=True, verbose_name='LINE group ID')),
                ('group_name', models.CharField(blank=True, max_length=255, verbose_name='group name')),
                ('encrypted_password', models.CharField(max_length=255, verbose_name='encrypted password')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('auto_remove_unauthorized', models.BooleanField(default=True, verbose_name='auto remove unauthorized users')),
                ('password_expiry_days', models.IntegerField(default=30, verbose_name='password expiry days')),
                ('max_members', models.IntegerField(default=100, verbose_name='max members')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('password_changed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='password changed at')),
                ('total_members', models.IntegerField(default=0, verbose_name='total members')),
                ('unauthorized_attempts', models.IntegerField(default=0, verbose_name='unauthorized attempts')),
                ('admins', models.ManyToManyField(blank=True, related_name='admin_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LINE group',
                'verbose_name_plural': 'LINE groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line_member_id', models.CharField(max_length=255, verbose_name='LINE member ID')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='joined at')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='validated at')),
                ('removed_at', models.DateTimeField(blank=True, null=True, verbose_name='removed at')),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('validated', 'Validated'), ('failed', 'Failed'), ('removed', 'Removed')], default='pending', max_length=20, verbose_name='validation status')),
                ('validation_attempts', models.IntegerField(default=0, verbose_name='validation attempts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='line_bot.linegroup')),
            ],
            options={
                'verbose_name': 'group membership',
                'verbose_name_plural': 'group memberships',
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='CommandExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raw_command', models.TextField(verbose_name='raw command')),
                ('parameters', models.JSONField(blank=True, default=dict, verbose_name='parameters')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('unauthorized', 'Unauthorized')], max_length=20, verbose_name='status')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('response_sent', models.TextField(blank=True, verbose_name='response sent')),
                ('executed_at', models.DateTimeField(auto_now_add=True, verbose_name='executed at')),
                ('execution_time_ms', models.IntegerField(default=0, verbose_name='execution time (ms)')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('command', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='line_bot.botcommand')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_executions', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_executions', to='line_bot.linegroup')),
            ],
            options={
                'verbose_name': 'command execution',
                'verbose_name_plural': 'command executions',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='LineMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_id', models.CharField(max_length=255, unique=True, verbose_name='LINE message ID')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('file', 'File'), ('location', 'Location'), ('sticker', 'Sticker'), ('follow', 'Follow'), ('unfollow', 'Unfollow'), ('join', 'Join'), ('leave', 'Leave'), ('member_joined', 'Member Joined'), ('member_left', 'Member Left')], max_length=20, verbose_name='message type')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('raw_event', models.JSONField(default=dict, verbose_name='raw event')),
                ('received_at', models.DateTimeField(auto_now_add=True, verbose_name='received at')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='processed at')),
                ('is_command', models.BooleanField(default=False, verbose_name='is command')),
                ('command_execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_message', to='line_bot.commandexecution')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='line_bot.linegroup')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LINE message',
                'verbose_name_plural': 'LINE messages',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='linegroup',
            index=models.Index(fields=['group_id'], name='line_bot_li_group_i_fa053f_idx'),
        ),
        migrations.AddIndex(
            model_name='linegroup',
            index=models.Index(fields=['is_active'], name='line_bot_li_is_acti_4db9b0_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['group', 'validation_status'], name='line_bot_gr_group_i_e23e04_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['user', 'validation_status'], name='line_bot_gr_user_id_dbc096_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('user', 'group')},
        ),
        migrations.AddIndex(
            model_name='commandexecution',
            index=models.Index(fields=['user', '-executed_at'], name='line_bot_co_user_id_a3796b_idx'),
        ),
        migrations.AddIndex(
            model_name='commandexecution',
            index=models.Index(fields=['command', '-executed_at'], name='line_bot_co_command_3d3e8d_idx'),
        ),
        migrations.AddIndex(
            model_name='commandexecution',
            index=models.Index(fields=['status', '-executed_at'], name='line_bot_co_status_df2229_idx'),
        ),
        migrations.AddIndex(
            model_name='linemessage',
            index=models.Index(fields=['user', '-received_at'], name='line_bot_li_user_id_f9826d_idx'),
        ),
        migrations.AddIndex(
            model_name='linemessage',
            index=models.Index(fields=['group', '-received_at'], name='line_bot_li_group_i_55808f_idx'),
        ),
        migrations.AddIndex(
            model_name='linemessage',
            index=models.Index(fields=['message_type', '-received_at'], name='line_bot_li_message_6477f5_idx'),
        ),
    ]
